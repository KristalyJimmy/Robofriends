{"version":3,"sources":["components/ErrorBoundry.js","components/Searchbox.js","components/CardList.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["ErrorBoundry","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","hasError","_inherits","_createClass","key","value","error","info","setState","React","createElement","children","Component","Searchbox","_ref","searchfield","searchChange","className","type","placeholder","onChange","CardList","robots","Error","Scroll","style","overflowY","border","height","App","onSearchChange","event","target","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","name","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"yNAuBeA,EArBG,SAAAC,GACd,SAAAD,EAAYE,GAAM,IAAAC,EAIb,OAJaC,YAAAC,KAAAL,IACdG,EAAAG,YAAAD,KAAAE,YAAAP,GAAAQ,KAAAH,KAAMH,KACDO,MAAQ,CACTC,UAAU,GACbP,EAaJ,OAlBaQ,YAAAX,EAAAC,GAMbW,YAAAZ,EAAA,EAAAa,IAAA,oBAAAC,MAAA,SAEiBC,EAAOC,GACrBX,KAAKY,SAAS,CAAEP,UAAU,MAC7B,CAAAG,IAAA,SAAAC,MAAA,WAGG,OAAIT,KAAKI,MAAMC,SACJQ,IAAAC,cAAA,UAAI,4BAGRd,KAAKH,MAAMkB,aACrBpB,EAlBa,CAASqB,aCYZC,EAZG,SAAHC,GAAgBA,EAAXC,YAA+B,IAAlBC,EAAYF,EAAZE,aAC7B,OACIP,IAAAC,cAAA,OAAKO,UAAU,OACXR,IAAAC,cAAA,SACIO,UAAU,mCACVC,KAAK,SACLC,YAAY,mBACZC,SAAUJ,MCeXK,EArBE,SAAHP,GAAWA,EAANQ,OAEX,MAAM,IAAIC,MAAM,UCKTC,EARA,SAAC/B,GACZ,OACIgB,IAAAC,cAAA,OAAKe,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAO,UAC9DnC,EAAMkB,WCuDJkB,SArDN,SAAArC,GACL,SAAAqC,IAAa,IAAAnC,EAKR,OALQC,YAAAC,KAAAiC,IACTnC,EAAAG,YAAAD,KAAAE,YAAA+B,GAAA9B,KAAAH,QAaJkC,eAAiB,SAACC,GACdrC,EAAKc,SAAS,CAACO,YAAagB,EAAMC,OAAO3B,SAbzCX,EAAKM,MAAQ,CACTsB,OAAQ,GACRP,YAAa,IAChBrB,EA2CA,OAjDAQ,YAAA2B,EAAArC,GAOJW,YAAA0B,EAAA,EAAAzB,IAAA,oBAAAC,MAAA,WAEkB,IAAA4B,EAAArC,KACfsC,MAAM,8CACDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAGL,EAAKzB,SAAS,CAACc,OAAQgB,QAC5C,CAAAlC,IAAA,SAAAC,MAAA,WAOO,IAAAkC,EAC0B3C,KAAKI,MAA5BsB,EAAMiB,EAANjB,OAAQP,EAAWwB,EAAXxB,YACTyB,EAAiBlB,EAAOmB,OAAO,SAAAC,GACjC,OAAOA,EAAMC,KAAKC,cAAcC,SAAS9B,EAAY6B,iBAcrD,OAAQtB,EAAOwB,OAEPrC,IAAAC,cAAA,OAAKO,UAAU,MACXR,IAAAC,cAAA,MAAIO,UAAU,MAAK,eACnBR,IAAAC,cAACG,EAAS,CAACG,aAAcpB,KAAKkC,iBAC9BrB,IAAAC,cAACc,EAAM,KACHf,IAAAC,cAACnB,EAAY,KACTkB,IAAAC,cAACW,EAAQ,CAACC,OAAQkB,OAPd/B,IAAAC,cAAA,UAAI,eAY/BmB,EAjDA,CAASjB,cCKHmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAhB,KAAAe,EAAAE,KAAA,UAAqBjB,KAAK,SAAArB,GAAiD,IAA9CuC,EAAMvC,EAANuC,OAAQC,EAAMxC,EAANwC,OAAQC,EAAMzC,EAANyC,OAAQC,EAAM1C,EAAN0C,OAAQC,EAAO3C,EAAP2C,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,YCCDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrD,IAAAC,cAACD,IAAMsD,WAAU,KACftD,IAAAC,cAACmB,EAAG,QAGRkB","file":"static/js/main.42e68faf.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooops. That is not good</h1>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\n\r\nconst Searchbox = ({searchfield, searchChange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='Search robots...'\r\n                onChange={searchChange}>\r\n            </input>\r\n        </div>\r\n    )\r\n}\r\nexport default Searchbox;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    if (true) {\r\n        throw new Error('Noooo');\r\n    }\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return ( \r\n                        <Card \r\n                            key={i} \r\n                            id={robots[i].id} \r\n                            name={robots[i].name} \r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border:'3px solid black', height:'500px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport Searchbox from '../components/Searchbox';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users =>this.setState({robots: users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value});\r\n      \r\n    }\r\n\r\n    render(){\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })/*\r\n        if (!robots.length) {\r\n            return <h1>Loading</h1>\r\n        } else {\r\n            return(\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <Searchbox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </Scroll>\r\n                </div>\r\n            )*/\r\n            return !robots.length ? <h1>Loading</h1> :\r\n                (\r\n                    <div className='tc'>\r\n                        <h1 className='f1'>RoboFriends</h1>\r\n                        <Searchbox searchChange={this.onSearchChange}/>\r\n                        <Scroll>\r\n                            <ErrorBoundry>\r\n                                <CardList robots={filteredRobots}/>\r\n                            </ErrorBoundry>\r\n                        </Scroll>\r\n                    </div>\r\n                )\r\n        }\r\n        \r\n    }\r\n    \r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n//import { robots } from './robots';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\nreportWebVitals();\n"],"sourceRoot":""}